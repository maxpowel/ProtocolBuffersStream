/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.6 at Thu Sep  8 00:18:32 2016. */

#ifndef PB_COMMAND_PB_H_INCLUDED
#define PB_COMMAND_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _Command {
    int32_t command;
/* @@protoc_insertion_point(struct:Command) */
} Command;

typedef struct _Response {
    bool success;
    float someValue;
/* @@protoc_insertion_point(struct:Response) */
} Response;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Command_init_default                     {0}
#define Response_init_default                    {0, 0}
#define Command_init_zero                        {0}
#define Response_init_zero                       {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Command_command_tag                      1
#define Response_success_tag                     1
#define Response_someValue_tag                   2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Command_fields[2];
extern const pb_field_t Response_fields[3];

/* Maximum encoded size of messages (where known) */
#define Command_size                             11
#define Response_size                            7

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define COMMAND_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
